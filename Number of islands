class Solution {
private: 
    bool isValid(int a,int b,int c,int d,vector<vector<char>>& grid){
        if(a>=0&&a<c&&b>=0&&b<d&&grid[a][b]=='1'){
            return true;
        }
        else{
            return false;
        }
    }
    void dfs(int i,int j,int n,int m,vector<vector<char>>& grid){
        grid[i][j]=0;
        if (isValid(i-1,j,n,m,grid)){
            dfs(i-1,j,n,m,grid);
        }
        if (isValid(i+1,j,n,m,grid)){
            dfs(i+1,j,n,m,grid);
        }
        if (isValid(i,j-1,n,m,grid)){
            dfs(i,j-1,n,m,grid);
        }
        if (isValid(i,j+1,n,m,grid)){
            dfs(i,j+1,n,m,grid);
        }
    }
public:
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    ans++;
                    dfs(i,j,n,m,grid);
                }
            }
        }
        return ans;
    }
};
